remotes::install_github("SysBioChalmers/sybil-SBML")
install.packages("libSBML")
BiocManager::install("libSBML")
BiocManager::install("libSBML", force = T)
BiocManager::install("libSBML")
remotes::install_github("SysBioChalmers/sybil-SBML")
install.packages("C:/Users/rober/Downloads/libSBML_5.19.0.zip", repos = NULL, type = "win.binary")
library(libSBML)
install.packages("sybilsbml")
install.packages("sybilSBML")
library(libSBML)
uninstall.packages()
remove.packages("libSBML")
install.packages("C:/Users/rober/Downloads/libSBML_5.20.2.tar.gz", repos = NULL, type = "source")
remove.packages("libSBML")
remove.packages("libsbml")
install.packages("C:/Users/rober/Downloads/libSBML_5.20.2.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/rober/Downloads/libSBML_5.19.0.zip", repos = NULL, type = "source")
remotes::install_github("SysBioChalmers/sybil-SBML")
install.packages("sybil")
remotes::install_github("SysBioChalmers/sybil")
remotes::install_github("SysBioChalmers/sybil-SBML")
library(libSBML)
.libPaths()
libPaths()
.libPaths()
library(libSBML)
remove.packages
remove.packages("libSBML")
library(libSBML)
remove.packages("libSBML")
library(libSBML)
install.packages("libSBML")
install.packages("C:/Users/rober/Downloads/libSBML_5.19.0.zip", repos = NULL, type = "win.binary")
library(libSBML)
remotes::install_github("SysBioChalmers/sybil")
remotes::install_github("SysBioChalmers/sybil-SBML")
install.packages("remotes")
remotes::install_github("SysBioChalmers/sybil")
remotes::install_github("SysBioChalmers/sybil")
remotes::install_github("SysBioChalmers/sybil", force = T)
install.packages("sybilSBML")
remove.packages("libSBML")
install.packages("C:/Users/rober/Downloads/libSBML_5.18.0.zip", repos = NULL, type = "win.binary")
remotes::install_github("SysBioChalmers/sybil-SBML")
install.packages("gapseq")
remotes::install_github("Waschina/cobrar")
library(cobrar)
install.packages("cobrar")
remotes::install_github("SysBioChalmers/sybil-SBML")
install.packages("C:/Users/rober/Downloads/libSBML_5.18.0.zip", repos = NULL, type = "win.binary")
library(libSBML)
install.packages("C:/Users/rober/Downloads/libSBML_5.18.0.zip", repos = NULL, type = "win.binary")
library(libSBML)
remove.packages("libSBML")
install.packages("C:/Users/rober/Downloads/libSBML_5.18.0.zip", repos = NULL, type = "win.binary")
libSBML::
library(libSBML)
remove.packages(libSBML)
remove.packages("libSBML")
install.packages("C:/Users/rober/Downloads/libSBML_5.19.0.tar.gz", repos = NULL, type = "win.binary")
install.packages("C:/Users/rober/Downloads/libSBML_5.19.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/rober/Downloads/libSBML_5.19.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/rober/Downloads/libSBML_5.18.0.zip", repos = NULL, type = "win.binary")
library(libSBML)
remove.packages('libSBML')
install.packages("C:/Users/rober/Downloads/libSBML_5.19.0.zip", repos = NULL, type = "win.binary")
library(libSBML)
remotes::install_github("SysBioChalmers/sybil")
library(sybil)
remove.packages("libSBML")
install.packages("C:/Users/rober/Downloads/libSBML_5.18.0.zip", repos = NULL, type = "win.binary")
remove.packages("libSBML")
install.packages("C:/Users/rober/Downloads/libSBML_5.18.0.zip", repos = NULL, type = "win.binary")
setwd("\\wsl.localhost\Ubuntu\home\rgl079\MROs")
setwd("//wsl.localhost/Ubuntu/home/rgl079/MROs")
#!/usr/bin/env Rscript
setwd("//wsl.localhost/Ubuntu/home/rgl079/MROs")
library(ggplot2)
library(sybilSBML)
res.df = read.csv("fba-res.csv")
res.df
str(res.df)
res.df$label = ""
str(res.df)
res.df$label[108] = "CI"
res.df$label[109] = "CII"
res.df$label[110] = "CIII"
res.df$label[111] = "CIV"
res.df$label[112] = "CV"
str(res.df)
res.df$label
res.df$name[grep("PDHm pyruvate", res.df$name)]
res.df$name[grep("pyruvate", res.df$name)]
paste(c("testing","this"))
print(paste(c("testing","this")))
print(paste(c("testing",toString(2),"this")))
print(paste(c("testing",toString(2),"this"),sep = ""))
print(paste(c("testing",toString(3),"this"),sep = ""))
setwd("..")
source("hypertraps.R")
setwd("Scripts")
setwd("//wsl.localhost/Ubuntu/home/rgl079/hypertraps-ct-test")
setwd("..")
source("hypertraps.R")
setwd("Scripts")
setwd("//wsl.localhost/Ubuntu/home/rgl079/hypertraps-ct-test")
setwd("//wsl.localhost/Ubuntu/home/rgl079/hypertraps-ct-test/Scripts")
setwd("..")
source("hypertraps.R")
setwd("Scripts")
m.1 = matrix(rep(c(0,0,0,0,0,
1,0,0,0,0,
1,1,0,0,0,
1,1,1,0,0,
1,1,1,1,0,
0,0,0,0,0,
0,0,0,0,1,
0,0,0,1,1,
0,0,1,1,1,
0,1,1,1,1),5), byrow=TRUE, ncol=5)
m.2 = matrix(rep(c(1,0,0,0,0,
1,1,0,0,0,
1,1,1,0,0,
1,1,1,1,0,
1,1,1,1,1,
0,0,0,0,1,
0,0,0,1,1,
0,0,1,1,1,
0,1,1,1,1,
1,1,1,1,1),5), byrow=TRUE, ncol=5)
times.cs = rep(c(0.1, 0.2, 0.3, 0.4, 0.5), 10)
times = rep(0.1, 50)
### simple demo
my.post = HyperTraPS(m.2, initialstates = m.1,
starttimes = times, endtimes = times,
length = 4,
samplegap = 10,
output_transitions = 1,
featurenames = c("A", "B", "C", "D", "E"));
warnings()
plotHypercube.summary(my.post)
setwd("~/")
setwd("//wsl.localhost/Ubuntu/home/rgl079")
setwd("//wsl.localhost/Ubuntu/home/rgl079/MROs")
setwd("//wsl.localhost/Ubuntu/home/rgl079/MROs/FBA")
# Fetch data
d1 <- data.frame(read.csv("MitoMammal/Results/single-double-MAT_ATP-no-restriction.csv"))
# Fetch data
d1 <- data.frame(read.csv("MitoMammal/Results/single-double-KO-MAT_ATP-no-restriction.csv"))
d2 <- data.frame(read.csv("MitoMammal/Results/single-double-KO-MAT_ATP-oxygen-restriction.csv"))
d2 <- data.frame(read.csv("MitoMammal/Results/single-double-KO-MAX_ATP-oxygen-restriction.csv"))
# Fetch data
d1 <- data.frame(read.csv("MitoMammal/Results/single-double-KO-MAX_ATP-no-restriction.csv"))
library(ggplot2)
library(forcats)
install.packages("forcats")
library(forcats)
# Plot a simple heatmap
ggplot(data = d1, aes(x=fct_inorder(KO),y=fct_inorder(KO), fill = MAX_ATP))+
geom_raster()
d1.1 <- d1[c(1:7),]
# Plot a simple heatmap
ggplot(data = d1.1, aes(x=fct_inorder(KO),y=fct_inorder(KO), fill = MAX_ATP))+
geom_raster()
library(sybilSBML)
# Plot a simple heatmap
ggplot(data = d1.1, aes(x=fct_inorder(KO),y=fct_inorder(KO), fill = ))+
geom_raster()
library(ggplot2)
library(forcats)
setwd("//wsl.localhost/Ubuntu/home/rgl079/MROs/FBA")
# Fetch data
d1 <- data.frame(read.csv("MitoMammal/Results/single-double-KO-MAX_ATP-no-restriction.csv"))
d2 <- data.frame(read.csv("MitoMammal/Results/single-double-KO-MAX_ATP-oxygen-restriction.csv"))
d1.1 <- d1[c(1:7),]
# Plot a simple heatmap
ggplot(data = d1.1, aes(x=fct_inorder(KO),y=fct_inorder(KO), fill = ))+
geom_raster()
for(row in 1:nrow(d1)){
}
# Plot a simple heatmap
ggplot(data = d1.1, aes(x=fct_inorder(KO),y=fct_inorder(KO), fill = ))+
geom_raster()
# Plot a simple heatmap
ggplot(data = d1.1, aes(x=fct_inorder(KO),y=fct_inorder(KO), fill = MAX_ATP))+
geom_raster()
d1.1
# Plot a simple heatmap
ggplot(data = d1.1, aes(x=fct_inorder(KO),y=fct_inorder(KO), fill = MAX_ATP))+
geom_tile()
